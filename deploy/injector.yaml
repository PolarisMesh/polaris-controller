---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: polaris-sidecar-injector
  namespace: polaris-system
  labels:
    app: sidecar-injector
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: sidecar-injector

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: polaris-sidecar-injector
  namespace: polaris-system
  labels:
    app: sidecar-injector
data:
  values: |-
    {"clusterResources":true,"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configNamespace":"polaris-system","configValidation":"false","controlPlaneSecurityEnabled":true,"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"istio","imagePullPolicy":"Always","imagePullSecrets":[],"istioNamespace":"polaris-system","k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logAsJson":false,"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"mtls":{"enabled":false},"multiCluster":{"enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"policyNamespace":"polaris-system","priorityClassName":"","prometheusNamespace":"polaris-system","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"enabled","clusterDomain":"cluster.local","componentLogLevel":"misc:error","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"envoyAccessLogService":{"enabled":false,"host":null,"port":null},"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","kubevirtInterfaces":"","logLevel":"warning","privileged":false,"protocolDetectionTimeout":"10ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tag":"1.7.0","tracer":"zipkin"},"proxy_init":{"image":"proxyv2","resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"sds":{"enabled":false,"udsPath":""},"tag":"1.5.8","telemetryNamespace":"polaris-system","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true,"xdsApiVersion":"v3"},"istio_cni":{"enabled":false},"sidecarInjectorWebhook":{"alwaysInjectSelector":[],"enableAccessLog":false,"enableNamespacesByDefault":false,"image":"sidecar_injector","injectLabel":"istio-injection","neverInjectSelector":[],"nodeSelector":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"replicaCount":2,"rewriteAppHTTPProbe":false,"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","selfSigned":true,"tolerations":[]},"version":""}

  dns-config: |-
    policy: enabled
    alwaysInjectSelector:
      []

    neverInjectSelector:
      []

    template: |
      containers:
      - image: polarismesh/polaris-sidecar:latest
        name: polaris-sidecar
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
          privileged: true
          readOnlyRootFilesystem: false
          runAsGroup: 1337
          runAsNonRoot: false
          runAsUser: 1337
        imagePullPolicy: Always
        command: ["./polaris-sidecar"]
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
          - mountPath: /root/polaris
            defaultMode: 777
            name: polaris-dir
          - mountPath: /root/log
            defaultMode: 777
            name: polaris-log
      initContainers:
      - name: polaris-sidecar-init
        image: polarismesh/polaris-sidecar-init:latest
        imagePullPolicy: Always
        command: ["./start.sh"]
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
      volumes:
        - name: polaris-client-config
          configMap:
            defaultMode: 420
            name: polaris-client-config
        - name: polaris-sidecar-iptables
          configMap:
            defaultMode: 420
            name: polaris-sidecar-iptables
        - name: polaris-dir
          emptyDir: {}
        - name: polaris-log
          emptyDir: {}

  mesh-config: |-
    policy: enabled
    alwaysInjectSelector:
      []

    neverInjectSelector:
      []

    template: |
      containers:
      - name: envoy
        image: envoyproxy/envoy:v1.18.3
        imagePullPolicy: Always
        resources:
        {{- if or (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPU`) (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemory`) (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPULimit`) (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemoryLimit`) }}
          {{- if or (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPU`) (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemory`) }}
            requests:
              {{ if (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPU`) -}}
              cpu: "{{ index .ObjectMeta.Annotations `polarismesh.cn/proxyCPU` }}"
              {{ end }}
              {{ if (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemory`) -}}
              memory: "{{ index .ObjectMeta.Annotations `polarismesh.cn/proxyMemory` }}"
              {{ end }}
          {{- end }}
          {{- if or (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPULimit`) (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemoryLimit`) }}
            limits:
              {{ if (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPULimit`) -}}
              cpu: "{{ index .ObjectMeta.Annotations `polarismesh.cn/proxyCPULimit` }}"
              {{ end }}
              {{ if (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemoryLimit`) -}}
              memory: "{{ index .ObjectMeta.Annotations `polarismesh.cn/proxyMemoryLimit` }}"
              {{ end }}
          {{- end }}
        {{- else }}
          {{- if .Values.global.proxy.resources }}
            {{ toYaml .Values.global.proxy.resources | indent 6 }}
          {{- end }}
        {{- end }}
        env:
        - name: ENVOY_UID
          value: "1337"
        volumeMounts:
        - mountPath: /etc/envoy
          name: envoy-bootstrap
      - image: polarismesh/polaris-sidecar:latest
        name: polaris-sidecar
        securityContext:
          runAsUser: 1337
          runAsGroup: 1337
        imagePullPolicy: Always
        command: ["./polaris-sidecar"]
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
          - mountPath: /root/polaris
            defaultMode: 777
            name: polaris-dir
          - mountPath: /root/log
            defaultMode: 777
            name: polaris-log
      initContainers:
      - name: polaris-bootstrap-writer
        image: ccr.ccs.tencentyun.com/polaris_mesh/polaris-envoy-bootstrap-generator:v1.0.0
        imagePullPolicy: Always
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POLARIS_SERVER_URL
          value: {{.ProxyConfig.ProxyMetadata.serverAddress}}:15010
        - name: CLUSTER_NAME
          value: {{.ProxyConfig.ProxyMetadata.clusterName}}
        volumeMounts:
          - mountPath: /var/lib/data
            name: envoy-bootstrap
      - name: istio-init
        image: istio/proxyv2:1.11.4
        imagePullPolicy: IfNotPresent
        args:
          - istio-iptables
          - -p
          - "15001"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - "10.4.4.4/32"
          - -b
          - "{{ (annotation .ObjectMeta `polarismesh.cn/includeInboundPorts` ``) }}"
          - -x
          - "{{ (annotation .ObjectMeta `polarismesh.cn/excludeOutboundCIDRs` ``) }}"
          - -d
          - "{{ (annotation .ObjectMeta `polarismesh.cn/excludeInboundPorts` ``) }}"
          - -o
          - "{{ (annotation .ObjectMeta `polarismesh.cn/excludeOutboundPorts` ``) }}"
          - --redirect-dns=true
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
      volumes:
        - name: polaris-client-config
          configMap:
            defaultMode: 420
            name: polaris-client-config
        - name: envoy-bootstrap
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: polaris-sidecar-injector
  namespace: polaris-system
  labels:
    app: sidecar-injector
spec:
  ports:
    - port: 443
      targetPort: 9443
  selector:
    app: sidecar-injector
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: polaris-sidecar-injector
  labels:
    app: sidecar-injector
webhooks:
  - name: polaris.tencent.com
    clientConfig:
      service:
        name: polaris-sidecar-injector
        namespace: polaris-system
        path: "/inject"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZoekNDQTIrZ0F3SUJBZ0lVQ0MzcDVjQ0FhdWpsL29OdmU3bTQxbE5Ycjk4d0RRWUpLb1pJaHZjTkFRRUwKQlFBd05qRTBNRElHQTFVRUF3d3JjRzlzWVhKcGN5MXphV1JsWTJGeUxXbHVhbVZqZEc5eUxuQnZiR0Z5YVhNdApjM2x6ZEdWdExuTjJZekFlRncweU1UQTJNekF3TnpVM01qVmFGdzB5TWpBMk16QXdOelUzTWpWYU1EWXhOREF5CkJnTlZCQU1NSzNCdmJHRnlhWE10YzJsa1pXTmhjaTFwYm1wbFkzUnZjaTV3YjJ4aGNtbHpMWE41YzNSbGJTNXoKZG1Nd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURKNnk2NGRuSFJLWmE5eTJDUQpzQTIwaGRsakpxUGozZEhWUDlQbkZETWhCS0hkOGpWdzRRb3FSM2tLUXczSVBKMWs4UHErcGxMWnk2L2Z0VnNDCmxlYlhBRm85akV2V0llZERZSkUxMVpQTkN3ajJzWS85eEtYQTlvcXYxMEZjUW1wUFZNN2JNbkhxdy9mNEFwZFgKZEQxUWFUVWV0bTA4ZWFXNXpUY2VDb3lQUVhDZUk1Q05aTkJkbzJUVGxYU29hcmovcEkyUDdvMmgzMzJ5SitjawoxK0l5dS9tVnA3aDZacXpSejZLYkVRV0xHM0h5bXJ0b0RVS0ZkdlJWZ2RJR3ltVDRNSnMvNXQzOFRwWlN1dEg0CkF1aE80NTdTWjNXbFIrSDRwWThMd05QR0lpSWpLU3N4TUNDbjFSN1FtNFFiU1ZzVDA5azlLdGlCbnErVkFFcmcKTHN5Y2FHQWRZQzNFQml5NnJlYmxxWlA1TFVSclhaMGVaaG1aVXZubks1NkdCb00xSVZYKzlBZDVrQWdSVU93SQo0OU16Y0pXL0h0QXlUem05TGRlNlIrME1oZWd2aGFMQW1uQ1p0OWZZNjExRzZtR2NRRGp0T01tN1d1cUllN0RsCmJGUGJHYmpzeUVvMUExWEFDb3J0UXNxK0FJTVVSYlJ1Y3ladUk1UzBNZTBZV0VlTUMyclJNWDlpMDZsTUZRYmIKQTkxTTgyTTFJVXpCVlFKa0ZqR0F1VmpFNVdObFdoWWpURkRDUUVYS2J3NzZoYkxnN1NRcXBMRzhPdmpCVHJFWQpkZWkxQVNtcUl4VHBJQzM2aTF1U3hEQjNlMktnVjNpU1FZYzNpR3N3T3V2WTluNytpZHNrTk5RdE5STnNTV1ZJCmFsQm5nYStqU1dFV2ZYcTFzdFphbTEyZzF3SURBUUFCbzRHTU1JR0pNQjBHQTFVZERnUVdCQlQvTVY4NGFEdWMKUG5Jb0Z5QXJZUjkwcWwwVGJEQWZCZ05WSFNNRUdEQVdnQlQvTVY4NGFEdWNQbklvRnlBcllSOTBxbDBUYkRBUApCZ05WSFJNQkFmOEVCVEFEQVFIL01EWUdBMVVkRVFRdk1DMkNLM0J2YkdGeWFYTXRjMmxrWldOaGNpMXBibXBsClkzUnZjaTV3YjJ4aGNtbHpMWE41YzNSbGJTNXpkbU13RFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUJ0MFF2eWoKYWdzaW5ZekNGUVRqUUhXN1c1Z1haY2xWQS9iTjZmSjFMZHBTMUNFK0lka2JiWmRQa1JUT1lzYUo1UEFyM1ZWdgorY2ZWZjNDbXZSc0FBaTVnZWttdVMxaFBHbWp3VEQrUjBkZ3FCWUdLZFhqVGV3cEZWU0RKbXhYelQ4OFRMY3JpCmg3VWpiVWJJaTVDMkNoai9qaHJZWi9vSlQ4RzFXQVJnTkhSVHNpZUNncTV3TVd0SVZjTjh2Q1hyYm5zL2FjWDIKY1RKSUZrcUNMTkpxUW1rV0h2Mmo4dDh6OFhyRTYvVnpzNWFKL0xlZ3RTVFE3U3ZHNktjOU1NWDFkQzRJY2t6Qwp5azl4dUJQQThwTEYwUHlpdzNHNjBFbldqdFo1c0J4OHZuZzFleTQrckhhNVdUa2NwNnRkdjZydHowWjJuV3JHCng4K21rOTBPdW1WT2NXNkQyNnA5N2FScDluSmxYL2Fpa3ErdWFaS0JKNzB3YzBaOGgrbDQ0MkNvWS85dWVjOTAKR0pNZy9oYnh6Qlg3WExqWUNqdVVCZ3doNVBtM1dyVFRMdmEzVlg0ZEgxbVJySjM4NDFkck90bFluYUtGYTJlRQpNUk9UZC9lZ0cvNnErdkhYVk9nMDNCZklvTnNKcVFmdjE2djBpNG00SlIxMXAxcFFVdStoMmZNd3NtTVdoN3pTCnE0S0tmYmgyOEZCN0t6cjBUZ2NqY1NGdWJaamJ3R2trQk5pNE5CcVdwWHFOTy9ISWVDMVVHZ2JYeG4rQ3ZhaGYKUk8rNEtZV2UyS2F2ak9yck8vcFJOcHFoYVk4VWh5dzFBcXdDU29RbG9lQ0w3YWxQTDlWS0Y5bU5FZUJNNWR4egpxeXdhc0hONHY2KzZLcVlPYkRZZkd6K2QwY1lBSC9CV3BlRnIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    rules:
      - operations: [ "CREATE" ]
        apiGroups: [ "" ]
        apiVersions: [ "v1" ]
        resources: [ "pods" ]
    failurePolicy: Fail
    namespaceSelector:
      matchLabels:
        polaris-injection: enabled
---

